{
  "openapi": "3.0.1",
  "info": {
    "title": "Sonatype Lifecycle Public REST API",
    "version": "1.177.0-01",
    "description": "The Sonatype Lifecycle API provides programmatic access to a comprehensive set of features for managing software components, security vulnerabilities, licenses, and policy evaluations. Integrate with Lifecycle to automate tasks, retrieve data, and customize your software development lifecycle."
  },
  "tags": [
    {
      "name": "Advanced Search",
      "description": "Use the Advanced Search REST API to perform searches on Lifecycle application scan reports."
    },
    {
      "name": "Components",
      "description": "Use this REST API to retrieve a component's security vulnerability data, license data, age and popularity."
    },
    {
      "name": "CycloneDX",
      "description": "Use the CycloneDX REST API to generate CycloneDX SBOMs in XML or JSON formats, containing coordinates and licenses for components found in a scan report."
    },
    {
      "name": "Data Retention Policies",
      "description": "Set policies for automatic purging of obsolete application and Success Metrics reports. <p>Note that IQ Server has a preset limit of purging 5000 reports in one execution of its report purging job."
    },
    {
      "name": "Policy Evaluation",
      "description": "Use this REST API to perform an application policy evaluation. Policy evaluations are executed asynchronously.<p>This is a 2-step process that involves: \n1. Requesting a policy evaluation (POST) \n2. Checking the status and response of the evaluation request (GET)"
    },
    {
      "name": "Application Categories"
    },
    {
      "name": "Applications"
    },
    {
      "name": "Audit Logs"
    },
    {
      "name": "Claim"
    },
    {
      "name": "Composite Source Control"
    },
    {
      "name": "Composite Source Control Config Validator"
    },
    {
      "name": "Config"
    },
    {
      "name": "Config Artifactory Connection"
    },
    {
      "name": "Config Crowd"
    },
    {
      "name": "Config JIRA"
    },
    {
      "name": "Config Mail"
    },
    {
      "name": "Config Proxy Server"
    },
    {
      "name": "Config Reverse Proxy Authentication"
    },
    {
      "name": "Config SAML"
    },
    {
      "name": "Config Source Control"
    },
    {
      "name": "Endpoints"
    },
    {
      "name": "Firewall"
    },
    {
      "name": "Labels"
    },
    {
      "name": "License Legal Metadata"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Policy Violations"
    },
    {
      "name": "Policy Waiver"
    },
    {
      "name": "Policy Waivers"
    },
    {
      "name": "Product"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Repositories"
    },
    {
      "name": "Role Memberships"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Scan"
    },
    {
      "name": "Search"
    },
    {
      "name": "Security Overrides"
    },
    {
      "name": "Source Control"
    },
    {
      "name": "Source Control Metrics"
    },
    {
      "name": "Spdx"
    },
    {
      "name": "Telemetry"
    },
    {
      "name": "User Tokens"
    },
    {
      "name": "Users"
    },
    {
      "name": "Vulnerabilities"
    },
    {
      "name": "sbom"
    },
    {
      "name": "sbom dashboard"
    }
  ],
  "paths": {
    "/api/v2/search/advanced/index": {
      "post": {
        "tags": [
          "Advanced Search"
        ],
        "description": "Use this method to create or rebuild the index for Advanced Search. This is a resource intensive operation. Avoid creating indexes during peak usage hours.\n\nPermissions required: System Administrator",
        "operationId": "createSearchIndexAsync",
        "responses": {
          "200": {
            "description": "Index created successfully."
          }
        }
      }
    },
    "/api/v2/search/advanced/export/csv": {
      "get": {
        "tags": [
          "Advanced Search"
        ],
        "description": "Use this method to generate a csv file containing your search results. The default delimiter in the generated file is comma. Use the advancedSearchCSVExportDelimiter property of the Configuration REST API to change the delimiter in the generated file.",
        "operationId": "getExportResults",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A well-formed search query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allComponents",
            "in": "query",
            "description": "Set to `true` to retrieve results that include components with no violations.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "sbomManager"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Downloadable csv file generated successfully."
          },
          "409": {
            "description": "Search index does not exist or is unreadable."
          }
        }
      }
    },
    "/api/v2/search/advanced": {
      "get": {
        "tags": [
          "Advanced Search"
        ],
        "description": "Use this method to perform an Advanced Search. ",
        "operationId": "searchIndex",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Enter your search query here",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the no. of results that should be visible per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the page no. for the page containing results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "allComponents",
            "in": "query",
            "description": "Set to `true` to retrieve results that include components with no violations",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "sbomManager"
              ]
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Search index does not exist or is unreadable."
          },
          "200": {
            "description": "Response JSON containing the search query sent in the API call, and other response fields as follows: \n1. searchQuery: search query sent in the request \n2. page: page number of search results requested \n3. pageSize: requested number of results per page \n4. totalNumberOfHits: total number of results returned \n5. isExactTotalNumberOfHits \n    * `true` indicates that the search results in the JSON is the same no. of search results that logically      match the search query. \n    * `false` indicates that the search results in the JSON are lower bound because fetching all results is     too expensive to compute. \n6. groupingByDTOS: array of search results grouped on a field name \n7. groupIdentifier: field name that the search results have been grouped by \n8. groupBy: field value that the search results have been grouped by \n9. additionalInfo: shared information between groups, e.g. info if grouped by a security vulnerability \n10. searchResultItemDTOS: array of search results with each element containing an itemType, field names and values \n11. resultIndex: indicating the relevance of the search result w.r.t. the query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/organization/{organizationId}": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getTags",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "addTag",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/organization/{organizationId}/{tagId}": {
      "delete": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/organization/{organizationId}/applicable": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getApplicableTags",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicableTagsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/application/{applicationPublicId}/applicable": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getApplicableTagsByApplicationPublicId",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/application/{applicationPublicId}": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getApplicationApplicableTags",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicableTagsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/organization/{organizationId}/policy": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getAppliedPolicyTags",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/organization/{organizationId}/applied": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getAppliedTags",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppliedTagsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applicationCategories/application": {
      "get": {
        "tags": [
          "Application Categories"
        ],
        "operationId": "getTagsUsedByApplications",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getApplications",
        "parameters": [
          {
            "name": "publicId",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "includeCategories",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "addApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApplicationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{sourceApplicationId}/clone": {
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "cloneApplication",
        "parameters": [
          {
            "name": "sourceApplicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clonedApplicationName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clonedApplicationPublicId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "operationId": "updateApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApplicationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "operationId": "deleteApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/applications/organization/{organizationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getApplicationsByOrganizationId",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationId}/move/organization/{organizationId}": {
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "moveApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMoveApplicationResponseDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auditLogs": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "operationId": "getAuditLogs",
        "parameters": [
          {
            "name": "startUtcDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endUtcDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/api/v2/components/details": {
      "post": {
        "tags": [
          "Components"
        ],
        "description": "Use this method to retrieve data related to a component.",
        "operationId": "getComponentDetails",
        "requestBody": {
          "description": "You can retrieve component data in any one of the 3 ways via:\n1. Component identifier\n2. Package URL\n3. Hash",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiComponentDetailsRequestDTOV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The response contains a detailed description of the component. The hash value returned here is truncated and not intended to be used as a checksum. It can be used as an identifier to pass to other REST API calls.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentDetailsResultDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/components/{componentHash}/labels/{labelName}/{ownerType}s/{internalOwnerId}": {
      "post": {
        "tags": [
          "Components"
        ],
        "description": "Use this method to assign an existing label to a component.",
        "operationId": "setComponentLabel",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "description": "Possible values: application or organization",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "description": "Possible values : applicationId or organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentHash",
            "in": "path",
            "description": "Enter the SHA1 hash of the component.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelName",
            "in": "path",
            "description": "Enter the label name to assign to this component.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Component label assigned successfully."
          }
        }
      },
      "delete": {
        "tags": [
          "Components"
        ],
        "description": "Use this method to un-assign a label from a component.",
        "operationId": "deleteComponentLabel",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "description": "Possible values: application or organization",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "description": "Possible values : applicationId or organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentHash",
            "in": "path",
            "description": "Enter the SHA1 hash of the component.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelName",
            "in": "path",
            "description": "Enter the label name to un-assign from this component.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Label un-assigned from component successfully."
          }
        }
      }
    },
    "/api/v2/repositories/quarantine/{quarantineId}/release": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "operationId": "releaseQuarantineWithoutReEval",
        "parameters": [
          {
            "name": "quarantineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentReleasedFromQuarantineDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/components/remediation/{ownerType}/{ownerId}": {
      "post": {
        "tags": [
          "Components"
        ],
        "description": "Use this method to obtain remediation suggestions for policy violations on a component basis. Remediations obtained from this method are same as those appearing on the Component Details Page in the UI.",
        "operationId": "getSuggestedRemediationForComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "description": "Possible values: application, organization, repository. ",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "description": "Possible values: applicationId, organizationId or repositoryId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "query",
            "description": "Enter the stageId to obtain next-non-failing and next-non-failing-with-dependencies remediation types in the response. Possible values are develop, build, stage-release, release and operate.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identificationSource",
            "in": "query",
            "description": "Enter the identification source if you want the remediation result based on third-party scan information (non-Sonatype). The identification source can be obtained from the Component Details Page in the UI.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "query",
            "description": "Enter the scanId (reportId) if you want the remediation result based on third-party scan information (non-Sonatype).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiComponentDTOV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns details for components that can be used for remediation. Details for the recommended component are grouped under type in the response.<ul><li>Type <i>next-no-violations</i> indicates that the component version has no violations.</li><li>Type <i>next-non-failing</i> indicates that the component version does not fail policy violations. The response will contain this type only if stageId is provided in the method call.</li><li>Type <i>next-no-violations-with-dependencies</i> indicates that the component, along-with its dependencies does not any violate any policies.</li><li>Type <i>next-non-failing-with-dependencies</i> indicates that the component and its dependencies will not fail a build for the stageId provided.</li></ul><p>Hash values returned here are truncated and are not intended to be used as checksums. They can be used as identifiers to pass to other REST API calls. "
          }
        }
      }
    },
    "/api/v2/components/versions": {
      "post": {
        "tags": [
          "Components"
        ],
        "description": "Use this method to retrieve all known versions of a component.",
        "operationId": "getComponentVersions",
        "requestBody": {
          "description": "Possible values: Component identifier or packageURL (pURL) identifier in the correct format. Use a-name for JavaScript components.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiComponentOrPurlIdentifierDTOV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Known versions of the component are returned in a string array of ascending order.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reports/components/quarantined": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getComponentsInQuarantine",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentsInQuarantineDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reports/components/waivers": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getComponentsWithWaivers",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentWaiversDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/compositeSourceControlConfigValidator/application/{applicationId}": {
      "get": {
        "tags": [
          "Composite Source Control Config Validator"
        ],
        "operationId": "validateSourceControlConfig",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/compositeSourceControl/{ownerType}/{internalOwnerId}": {
      "get": {
        "tags": [
          "Composite Source Control"
        ],
        "operationId": "getCompositeSourceControlByOwner",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCompositeSourceControlDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/features/{feature}": {
      "post": {
        "tags": [
          "Config"
        ],
        "operationId": "enabledFeature",
        "parameters": [
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config"
        ],
        "operationId": "disableFeature",
        "parameters": [
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "getConfiguration",
        "parameters": [
          {
            "name": "property",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config"
        ],
        "operationId": "setConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config"
        ],
        "operationId": "deleteConfiguration",
        "parameters": [
          {
            "name": "property",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/crowd": {
      "get": {
        "tags": [
          "Config Crowd"
        ],
        "operationId": "getCrowdConfiguration",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCrowdConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Crowd"
        ],
        "operationId": "insertOrUpdateCrowdConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCrowdConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Crowd"
        ],
        "operationId": "deleteCrowdConfiguration",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/crowd/test": {
      "post": {
        "tags": [
          "Config Crowd"
        ],
        "operationId": "testCrowdConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCrowdConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiStatusDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/cycloneDx/{cdxVersion}/{applicationId}/reports/{reportId}": {
      "get": {
        "tags": [
          "CycloneDX"
        ],
        "description": "Use this method to generate a CycloneDX SBOM for an application.<p>Permissions Required: View IQ Elements",
        "operationId": "getByReportId",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId for the application you want to generate the SBOM. You can also retrieve the applicationId using the Application REST API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "Enter the reportId to generate the SBOM for the application for a specific scan report.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cdxVersion",
            "in": "path",
            "description": "Possible values are 1.1|1.2|1.3|1.4|1.5.",
            "required": true,
            "schema": {
              "pattern": "1.1|1.2|1.3|1.4|1.5",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A downloadable file will be generated.",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        }
      }
    },
    "/api/v2/cycloneDx/{cdxVersion}/{applicationId}/stages/{stageId}": {
      "get": {
        "tags": [
          "CycloneDX"
        ],
        "description": "Use this method to generate a CycloneDX SBOM for an application.<p>Permissions Required: View IQ Elements",
        "operationId": "getLatest",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId for the application you want to generate the SBOM. You can also retrieve the applicationId using the Application REST API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "description": "Enter the stageId to generate the SBOM based on the latest application policy evaluation at that stage. Allowed values for stageId are 'develop', 'source', 'build', 'stage-release', 'release', and, 'operate'.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cdxVersion",
            "in": "path",
            "description": "Possible values are 1.1|1.2|1.3|1.4|1.5.",
            "required": true,
            "schema": {
              "pattern": "1.1|1.2|1.3|1.4|1.5",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A downloadable file will be generated.",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        }
      }
    },
    "/api/v2/dataRetentionPolicies/organizations/{organizationId}": {
      "get": {
        "tags": [
          "Data Retention Policies"
        ],
        "description": "Data retention policies help to limit the disk space consumption by removing obsolete data. Use this method to inspect the retention policies that are in effect for an organization. Application reports created by continuous monitoring are not affected by the stage retention policy. They appear separately under the key continuous-monitoring in the response JSON<p>Permissions required: View IQ Elements",
        "operationId": "getDataRetentionPolicies",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The organizationId assigned by IQ Server. Use the organization REST API to retrieve the organizationId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response JSON contains the policy settings for both applicationReports and successMetrics. Policy settings for application reports are shown for each stage of development. <ul><li>inheritPolicy IS a boolean flag indicating whether the policy is inherited from a parent organization.</li><li>enablePurging IS a boolean flag indicating if automatic purging is enabled or disabled.</li><li>maxCount IS the maximum no. of reports to retain.</li><li>maxAge IS the maximum age that a report is allowed to reach before it is purged. Possible values are days, weeks, months, years.</li></ul>The latest application report is always retained, regardless of its age.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiDataRetentionPoliciesDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Data Retention Policies"
        ],
        "description": "Data retention policies help to limit the disk space consumption by removing obsolete data. Use this method to set the retention policies for an organization. Application reports created by continuous monitoring are not affected by the stage retention policy. They appear separately under the key continuous-monitoring.<p>Permissions required: Edit IQ Elements",
        "operationId": "setDataRetentionPolicies",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The organizationId for the organization you want to set the data retention policy. Use the organization REST API to retrieve the organizationId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request JSON should include the retention policy settings for both application reports and success metrics.\n\nPolicy settings for application reports can be specified for each stage of development represented in the example below by additionalProp1. \nExample values for additionalProp1 are develop, build, stage-release, release, operate & continuous monitoring. For application reports created during continuous monitoring use the key continuous-monitoring instead of the stage name. <ul><li>inheritPolicy IS a boolean flag indicating whether the policy is inherited from a parent organization.</li><li>enablePurging IS a boolean flag indicating enabled or disabled status for automatic purging. </li><li>maxCount IS the maximum no. of reports to retain.</li><li>maxAge IS the maximum age that a report is allowed to reach before it is purged. Possible values are days, weeks, months, years.</li></ul>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiDataRetentionPoliciesDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The data retention policy has been set successfully."
          }
        }
      }
    },
    "/api/v2/dataRetentionPolicies/organizations/{organizationId}/parent": {
      "get": {
        "tags": [
          "Data Retention Policies"
        ],
        "description": "Data retention policies help to limit the disk space consumption by removing obsolete data. Use this method to inspect the retention policies that are in effect for the parent organization of the given organization. Application reports created by continuous monitoring are not affected by the stage retention policy. They appear separately under the key continuous-monitoring.<p>Permissions required: View IQ Elements",
        "operationId": "getParentDataRetentionPolicies",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The organizationId assigned by IQ Server. Use the organization REST API to retrieve the parent organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response JSON contains the policy settings for both applicationReports and successMetrics. Policy settings for application reports are shown for each stage of development. <ul><li>inheritPolicy IS a boolean flag indicating whether the policy is inherited from a parent organization.</li><li>enablePurging IS a boolean flag indicating if automatic purging is enabled or disabled.</li><li>maxCount IS the maximum no. of reports to retain.</li><li>maxAge IS the maximum age that a report is allowed to reach before it is purged. Possible values are days, weeks, months, years.</li></ul>The latest application report is always retained, regardless of its age.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiDataRetentionPoliciesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/endpoints/{apiType}": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "operationId": "getOpenAPI",
        "parameters": [
          {
            "name": "apiType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "public|experimental",
              "type": "string",
              "enum": [
                "public",
                "experimental"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/evaluation/applications/{applicationId}": {
      "post": {
        "tags": [
          "Policy Evaluation"
        ],
        "description": "Use this method to request a component evaluation. This is step 1 of the 2 step policy evaluation for components process.\n\nPermissions Required: Evaluate Components",
        "operationId": "evaluateComponents",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId. Use the Applications REST API to retrieve the internal applicationId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request JSON should contain component coordinates or the hash (SHA1) for each component. You can provide the packageURL instead of component information or hash.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiComponentEvaluationRequestDTOV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The JSON response contains resultId that will be assigned to the evaluation results, timestamp when the component evaluation was requested, the applicationId of the component and the results URL. The resultId obtained from here can be used to retrieve the evaluation result using the REST API or the result URL can be used in cURL. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentEvaluationTicketDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/evaluation/applications/{applicationId}/sourceControlEvaluation": {
      "post": {
        "tags": [
          "Policy Evaluation"
        ],
        "description": "Use this method to request a source control evaluation for a specific application. This is step 1 of the 2 step source control evaluation process. \n\nPermissions Required: Evaluate Applications",
        "operationId": "evaluateSourceControl",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId. Use the Applications REST API to retrieve the internal applicationId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request JSON should include the 1. branch name (name of the target branch in the source control repository, 2. stageId (recommended values are 'develop' for feature branches, and 'source' for default branches. Other stageIds that can be used are 'build', 'stage-release', 'release', 'operate' but are not recommended), 3. scanTargets (optional, specify one or more paths inside the repository. If not specified, the entire repository will be evaluated by default). Ensure that the repository paths are not relative and do not contain '../' or '..\\'.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSourceControlEvaluationRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response contains statusUrl. Use this statusUrl to check the evaluation status using the GET method (step 2 of the evaluation process). ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationEvaluationStatusDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/evaluation/applications/{applicationId}/status/{statusId}": {
      "get": {
        "tags": [
          "Policy Evaluation"
        ],
        "description": "This is step 2 of the policy evaluation process. Use the statusUrl obtained from the POST response for the corresponding applicationId. \n\nPermissions Required: Evaluate Applications",
        "operationId": "getApplicationEvaluationStatus",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the applicationId, for the which policy evaluation was requested.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "Enter the statusId value obtained as response of the POST call in step 1.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response will include one of the 3 possible status values: PENDING (indicates that the evaluation is still in progress), FAILED or COMPLETED. For completed evaluations, the response will contain the URLs for evaluation report to view the evaluation results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationEvaluationResultDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/evaluation/applications/{applicationId}/results/{resultId}": {
      "get": {
        "tags": [
          "Policy Evaluation"
        ],
        "description": "This is step 2 of the policy evaluation process for components. Use the resultId obtained from the POST response for the corresponding applicationId. \n\nPermissions Required: Evaluate Components ",
        "operationId": "getComponentEvaluation",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId (same as that sent in the POST request (step 1))",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Enter the resultId obtained from the POST response (step 1) used for component evaluation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Response not ready "
          },
          "200": {
            "description": "The response contains details for the policy evaluation request including submitted date, evaluation date, applicationId and the results of the evaluation for the component(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentEvaluationResultDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/evaluation/applications/{applicationId}/promoteScan": {
      "post": {
        "tags": [
          "Policy Evaluation"
        ],
        "description": "Use this method to rescan older scans. This is done when the binaries of a previous build are now moving to a new stage in the production pipeline. Using this method, you can avoid rebuilding the application and reuse the scan metadata at the newer stage. This new evaluation will evaluate the most recent security and license data against your current policies. \n\nPermissions Required: Evaluate Applications",
        "operationId": "promoteScan",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Enter the internal applicationId. Use the Applications REST API to retrieve the internal applicationId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "You can provide either the scanId (reportId) of the previous scan OR the source stageId (possible values are 'build', 'stage-release', 'release' or 'operate'). When using the stageId, the latest scanId for the application will be used. Enter the targetStageId for the new stage you want your scan to be promoted to (possible values are 'build', 'stage-release', 'release' or 'operate'). Using the same value for source and target stage will resubmit the latest scan report.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPromoteScanRequestDTOV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response will contain the statusUrl to view the evaluation result using the GET method (step 2)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationEvaluationStatusDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/telemetry": {
      "post": {
        "tags": [
          "Telemetry"
        ],
        "operationId": "postExternalTelemetry",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/metrics/embedded": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getFirewallMetrics",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ApiFirewallMetricsResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/repositoryManagers": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getRepositoryManagers",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryManagerListDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Firewall"
        ],
        "operationId": "addRepositoryManager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRepositoryManagerDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryManagerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/repositories/configuration/{repositoryManagerId}": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getConfiguredRepositories",
        "parameters": [
          {
            "name": "repositoryManagerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sinceUtcTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryListDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Firewall"
        ],
        "operationId": "configureRepositories",
        "parameters": [
          {
            "name": "repositoryManagerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRepositoryListDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/repositoryManagers/{repositoryManagerId}": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getRepositoryManager",
        "parameters": [
          {
            "name": "repositoryManagerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryManagerDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Firewall"
        ],
        "operationId": "deleteRepositoryManager",
        "parameters": [
          {
            "name": "repositoryManagerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/components/{repositoryManagerId}/{repositoryId}/evaluate": {
      "post": {
        "tags": [
          "Firewall"
        ],
        "operationId": "evaluateComponents_1",
        "parameters": [
          {
            "name": "repositoryManagerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRepositoryComponentEvaluationRequestList"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryComponentEvaluationResultList"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/releaseQuarantine/configuration": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getFirewallAutoUnquarantineConfig",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Firewall"
        ],
        "operationId": "setFirewallAutoUnquarantineConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/releaseQuarantine/summary": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getFirewallUnquarantineSummary",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFirewallReleaseQuarantineSummaryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/components/quarantined": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getQuarantineList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "policyId",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "componentName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asc",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/quarantine/summary": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getQuarantineSummary",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFirewallQuarantineSummaryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getQuarantinedComponentViewAnonymousAccess",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/repositoryContainer": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getRepositoryContainer",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryContainerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/firewall/components/autoReleasedFromQuarantine": {
      "get": {
        "tags": [
          "Firewall"
        ],
        "operationId": "getUnquarantineList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "policyId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asc",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess/{enabled}": {
      "put": {
        "tags": [
          "Firewall"
        ],
        "operationId": "setQuarantinedComponentViewAnonymousAccess",
        "parameters": [
          {
            "name": "enabled",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/claim/components/{hash}": {
      "get": {
        "tags": [
          "Claim"
        ],
        "operationId": "get",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHashComponentIdentifierDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claim"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/claim/components": {
      "get": {
        "tags": [
          "Claim"
        ],
        "operationId": "getAll",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHashComponentIdentifiersDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim"
        ],
        "operationId": "set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiHashComponentIdentifierDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHashComponentIdentifierDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/jira": {
      "get": {
        "tags": [
          "Config JIRA"
        ],
        "operationId": "getConfiguration_1",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiJiraConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config JIRA"
        ],
        "operationId": "setConfiguration_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config JIRA"
        ],
        "operationId": "deleteConfiguration_1",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/labels/{ownerType}/{ownerId}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "operationId": "getLabels",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inherit",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiLabelDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "operationId": "updateLabel",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLabelDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLabelDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "operationId": "addLabel",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLabelDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLabelDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/labels/{ownerType}/{ownerId}/{labelId}": {
      "delete": {
        "tags": [
          "Labels"
        ],
        "operationId": "deleteLabel",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/labels/{ownerType}/{ownerId}/applicable/context/{labelId}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "operationId": "getApplicableContexts",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicableContext"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/labels/{ownerType}/{ownerId}/applicable": {
      "get": {
        "tags": [
          "Labels"
        ],
        "operationId": "getApplicableLabels",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicableLabels"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/report-template/{id}": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getAttributionReportTemplateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributionReportTemplateDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "deleteAttributionReportTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/report-template": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getAllAttributionReportTemplates",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributionReportTemplateDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "saveAttributionReportTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributionReportTemplateDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributionReportTemplateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalApplicationHTMLReport",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalCustomApplicationHTMLReport",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/application/{applicationId}": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalApplicationReport",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLicenseLegalApplicationReportDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalApplicationReport_1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLicenseLegalApplicationReportDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/{ownerType}/{ownerId}/component": {
      "get": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalComponentReport",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identificationSource",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLicenseLegalComponentReportDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report/templateId/{templateId}": {
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalCustomApplicationHTMLReport_1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/customMultiApplication/report": {
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalCustomMultiApplicationHTMLReport",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/multiApplication/report/templateId/{templateId}": {
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalCustomMultiApplicationHTMLReport_1",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/multiApplication/report": {
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalMultiApplicationHTMLReport",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/licenseLegalMetadata/multiApplication/activeUserFilter/report/templateId/{templateId}": {
      "post": {
        "tags": [
          "License Legal Metadata"
        ],
        "operationId": "getLicenseLegalMultiApplicationReportFromActiveUserFilter",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/mail": {
      "get": {
        "tags": [
          "Config Mail"
        ],
        "operationId": "getConfiguration_2",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMailConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Mail"
        ],
        "operationId": "setConfiguration_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMailConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Mail"
        ],
        "operationId": "deleteConfiguration_2",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/mail/test/{recipientEmail}": {
      "post": {
        "tags": [
          "Config Mail"
        ],
        "operationId": "testConfiguration",
        "parameters": [
          {
            "name": "recipientEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMailConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/reports/metrics": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "getMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMetricsReportingQueryDTOV2"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "organizationName",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationListDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "operationId": "addOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiOrganizationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/organizations/{organizationId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/organizations/{organizationId}/move/destination/{destinationId}": {
      "put": {
        "tags": [
          "Organizations"
        ],
        "operationId": "moveOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "failEarlyOnError",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "getPolicies",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPolicyListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations/{violationId}/applicableWaivers": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getApplicableWaivers",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPolicyWaiversApplicableToViolationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations/crossStage": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getCrossStagePolicyViolationByConstituentId",
        "parameters": [
          {
            "name": "constituentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCrossStageViolationDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations/crossStage/{violationId}": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getCrossStagePolicyViolationById",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCrossStageViolationDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getPolicyViolations",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "openTimeAfter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "openTimeBefore",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApplicationViolationListDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations/transitive/{ownerType}/{ownerId}/{scanId}": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getTransitivePolicyViolationsByAppScanComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentTransitivePolicyViolationsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyViolations/transitive/{ownerType}/{ownerId}/stages/{stageId}": {
      "get": {
        "tags": [
          "Policy Violations"
        ],
        "operationId": "getTransitivePolicyViolationsByOwnerStageComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentTransitivePolicyViolationsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyWaiver/{policyViolationId}/{ownerType}": {
      "post": {
        "tags": [
          "Policy Waiver"
        ],
        "operationId": "addPolicyWaiver",
        "parameters": [
          {
            "name": "policyViolationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v2/policyWaivers/{ownerType}/{ownerId}/{policyViolationId}": {
      "post": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "addPolicyWaiverByPolicyViolationId",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyViolationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWaiverOptionsDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/{scanId}": {
      "get": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "getTransitivePolicyWaiversByAppScanComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiComponentPolicyWaiversDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "addWaiverToTransitivePolicyViolationsByAppScanComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWaiverOptionsDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/stages/{stageId}": {
      "post": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "addWaiverToTransitivePolicyViolationsByOwnerStageComponent",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWaiverOptionsDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/policyWaivers/{ownerType}/{ownerId}/{policyWaiverId}": {
      "get": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "getPolicyWaiver",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyWaiverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "deletePolicyWaiver",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyWaiverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/policyWaivers/{ownerType}/{ownerId}": {
      "get": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "getPolicyWaivers",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization|repository|repository_manager|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/policyWaivers/waiverRequests/{policyViolationId}": {
      "post": {
        "tags": [
          "Policy Waivers"
        ],
        "operationId": "requestPolicyWaiver",
        "parameters": [
          {
            "name": "policyViolationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestPolicyWaiverDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/product/license": {
      "post": {
        "tags": [
          "Product"
        ],
        "operationId": "installLicense",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/FormDataContentDisposition"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/plain": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "uninstallLicense",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/httpProxyServer": {
      "get": {
        "tags": [
          "Config Proxy Server"
        ],
        "operationId": "getConfiguration_3",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProxyServerConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Proxy Server"
        ],
        "operationId": "setConfiguration_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiProxyServerConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Proxy Server"
        ],
        "operationId": "deleteConfiguration_3",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationPublicId}/reports/{scanId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getData",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationPublicId}/reports/{scanId}/dependencyTree": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getDependencyTree",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiDependencyTreeResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationPublicId}/reports/policyViolations/diff": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getPolicyViolationDiff",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromCommit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toCommit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromPolicyEvaluationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toPolicyEvaluationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPolicyViolationDiffDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationPublicId}/reports/{scanId}/policy": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getPolicyViolations_1",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiReportPolicyDataDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/applications/{applicationPublicId}/reports/{scanId}/raw": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "getRawData",
        "parameters": [
          {
            "name": "applicationPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiReportRawDataDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reports/applications": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getAll_1",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationReportDTOV2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reports/applications/{applicationId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getByApplicationId",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationReportDTOV2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/reports/applications/{applicationId}/history": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getReportHistoryForApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiReportHistoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/repositories/{repositoryManagerInstanceId}/{repositoryPublicId}/components/quarantined/pathnames": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "operationId": "getQuarantinedByPath",
        "parameters": [
          {
            "name": "repositoryManagerInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryPublicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRepositoryPathResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/reverseProxyAuthentication": {
      "get": {
        "tags": [
          "Config Reverse Proxy Authentication"
        ],
        "operationId": "getConfiguration_4",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Reverse Proxy Authentication"
        ],
        "operationId": "setConfiguration_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Reverse Proxy Authentication"
        ],
        "operationId": "deleteConfiguration_4",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/roleMemberships/{ownerType}/{internalOwnerId}": {
      "get": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "getRoleMembershipsApplicationOrOrganization",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRoleMemberMappingListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/roleMemberships/{ownerType}": {
      "get": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "getRoleMembershipsGlobalOrRepositoryContainer",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "global|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRoleMemberMappingListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/roleMemberships/{ownerType}/{internalOwnerId}/role/{roleId}/{memberType}/{memberName}": {
      "put": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "grantRoleMembershipApplicationOrOrganization",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "user|group",
              "type": "string",
              "enum": [
                "USER",
                "GROUP"
              ]
            }
          },
          {
            "name": "memberName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "revokeRoleMembershipApplicationOrOrganization",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "user|group",
              "type": "string",
              "enum": [
                "USER",
                "GROUP"
              ]
            }
          },
          {
            "name": "memberName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/roleMemberships/{ownerType}/role/{roleId}/{memberType}/{memberName}": {
      "put": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "grantRoleMembershipGlobalOrRepositoryContainer",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "global|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "user|group",
              "type": "string",
              "enum": [
                "USER",
                "GROUP"
              ]
            }
          },
          {
            "name": "memberName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Memberships"
        ],
        "operationId": "revokeRoleMembershipGlobalOrRepositoryContainer",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "global|repository_container",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "user|group",
              "type": "string",
              "enum": [
                "USER",
                "GROUP"
              ]
            }
          },
          {
            "name": "memberName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "getRoles",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRoleListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/saml": {
      "get": {
        "tags": [
          "Config SAML"
        ],
        "operationId": "getSamlConfiguration",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSamlConfigurationResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config SAML"
        ],
        "operationId": "insertOrUpdateSamlConfiguration",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "identityProviderXml": {
                    "type": "string"
                  },
                  "samlConfiguration": {
                    "$ref": "#/components/schemas/ApiSamlConfigurationDTO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config SAML"
        ],
        "operationId": "deleteSamlConfiguration",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/saml/metadata": {
      "get": {
        "tags": [
          "Config SAML"
        ],
        "operationId": "getMetadata",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sbom/dashboard/sbomsHistoryMetrics": {
      "get": {
        "tags": [
          "sbom dashboard"
        ],
        "summary": "Gets application history metrics",
        "description": "Queries how many SBOMs applications have been analyzed",
        "operationId": "getApplicationsHistoryMetric",
        "responses": {
          "200": {
            "description": "Total of SBOMs applications analyzed",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/dashboard/sbomsAnalyzed": {
      "get": {
        "tags": [
          "sbom dashboard"
        ],
        "summary": "Gets total of SBOMs analyzed and the threshold in the product license",
        "description": "Queries how many SBOMs have been analyzed and the threshold in the product license",
        "operationId": "getSbomsAnalyzedMetrics",
        "responses": {
          "200": {
            "description": "Total of SBOMs analyzed and the threshold in the product license",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/dashboard/vulnerabilitiesByThreatLevel": {
      "get": {
        "tags": [
          "sbom dashboard"
        ],
        "summary": "Gets counters of vulnerabilities and annotations by threat level",
        "description": "Queries how many vulnerabilities and annotations have been found by each threat level",
        "operationId": "getVulnerabilitiesByThreatLevel",
        "responses": {
          "200": {
            "description": "Counters of vulnerabilities and annotations by threat level",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}/versions/{version}": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "Gets a sbom version",
        "description": "Downloads a specific sbom version in its original or current form",
        "operationId": "getSbomVersion",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "URL Encoded version value of the sbom",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "The state of the sbom version. Allowed values [original|current]. default = current",
            "schema": {
              "type": "string",
              "default": "current"
            }
          },
          {
            "name": "specification",
            "in": "query",
            "description": "Target specification of the sbom. Allowed values [cyclonedx1.5|spdx2.3]. default = cyclonedx1.5",
            "schema": {
              "type": "string",
              "default": "cyclonedx1.5"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Output format(json/xml) of the sbom. Changing the output format only applicable when downloading the current form of the SBOM. The original sbom will always return in the original form that it was ingested. When requesting `current` form and if this header value is not present the sbom will be returned in its original ingested format. Allowed values {'application/json'|'application/xml'}. default = null",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Supplied sbom version not found"
          },
          "200": {
            "description": "Content of the sbom",
            "content": {
              "application/json|application/xml": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sbom"
        ],
        "summary": "Delete sbom version",
        "description": "Deletes a specific sbom version including it's original contents and updates",
        "operationId": "deleteSbomVersion",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "URL Encoded version value of the sbom to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Supplied sbom version not found"
          },
          "204": {
            "description": "Delete successful"
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}/versions": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "Gets a list of active sbom versions by application id",
        "description": "Gets a list of active sbom versions by application id",
        "operationId": "getActiveSbomVersionListByApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of the active sbom versions by application id",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}/status/{importRequestId}": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "Get sbom import status",
        "description": "Gets status of a sbom import.",
        "operationId": "getImportStatus",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "importRequestId",
            "in": "path",
            "description": "The id of the import request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Sbom import still in progress."
          },
          "200": {
            "description": "Sbom import completed successfully.",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}/versions/{version}/components": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "Gets the components found in a specific sbom version",
        "description": "Lists the components in a specific sbom version with data about vulnerabilities and licenses",
        "operationId": "getSbomComponents",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "URL Encoded version value of the sbom to query its components",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vulnerabilityThreatLevels",
            "in": "query",
            "description": "If provided, filter components by the given threat level on their vulnerabilities",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NONE",
                  "LOW",
                  "MEDIUM",
                  "HIGH",
                  "CRITICAL"
                ]
              }
            }
          },
          {
            "name": "dependencyTypes",
            "in": "query",
            "description": "If provided, filter components by the given dependency types",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DIRECT",
                  "TRANSITIVE",
                  "UNSPECIFIED"
                ]
              }
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Criteria to sort the results. default = VULNERABILITIES",
            "schema": {
              "type": "string",
              "default": "VULNERABILITIES",
              "enum": [
                "TYPE",
                "PERCENTAGE_ANNOTATED",
                "VULNERABILITIES"
              ]
            }
          },
          {
            "name": "asc",
            "in": "query",
            "description": "Order mode ASC=true or DESC=false. default = false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number. default = 1",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return by page. default = 50",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of components in the sbom",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "Gets a paginated list of SBOMs for an application",
        "description": "Gets a paginated list of SBOMs for an application",
        "operationId": "getSbomMetadataSummaryForApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortByDate",
            "in": "query",
            "description": "Sort results by import date. Allowed values [asc|desc]. default = asc",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return by page. default = 10",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number. default = 1",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of the sboms",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/import": {
      "post": {
        "tags": [
          "sbom"
        ],
        "summary": "Import a new sbom version",
        "description": "Imports a new sbom version to an existing application",
        "operationId": "importSbom",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "applicationId"
                ],
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "description": "The internal id of the application"
                  },
                  "file": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid/Unsupported data provided for sbom import"
          },
          "202": {
            "description": "Import successful. URL to check the status of the import returned",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/sbom/applications/{applicationId}/versions/{version}/vulnerability/{refId}/analysis": {
      "put": {
        "tags": [
          "sbom"
        ],
        "summary": "Updates a vulnerability analysis annotation for a specific SBOM vulnerability",
        "description": "Updates a vulnerability analysis annotation for a specific SBOM vulnerability",
        "operationId": "saveVulnerabilityAnalysis",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "The internal id of the application",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version for a specific SBOM where the vulnerability is present",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refId",
            "in": "path",
            "description": "The vulnerability id of a vulnerability",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Vulnerability analysis details with component information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SBOM vulnerability analysis request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Vulnerability analysis annotation updated successfully",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Target vulnerability not found"
          }
        }
      }
    },
    "/api/v2/search/component": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "searchComponent",
        "parameters": [
          {
            "name": "stageId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "packageUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchResultsDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/securityOverrides": {
      "get": {
        "tags": [
          "Security Overrides"
        ],
        "operationId": "getSecurityVulnerabilityOverrides",
        "parameters": [
          {
            "name": "refId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentPurl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSecurityVulnerabilityOverrideResponseDTOV2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/sourceControl": {
      "get": {
        "tags": [
          "Config Source Control"
        ],
        "operationId": "getConfiguration_5",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSourceControlConfigurationDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Source Control"
        ],
        "operationId": "setConfiguration_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Source Control"
        ],
        "operationId": "deleteConfiguration_5",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/sourceControlMetrics/{ownerType}/{internalOwnerId}": {
      "get": {
        "tags": [
          "Source Control Metrics"
        ],
        "operationId": "getSourceControl",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPullRequestResults"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/sourceControl/{ownerType}/{internalOwnerId}": {
      "get": {
        "tags": [
          "Source Control"
        ],
        "operationId": "getSourceControl_1",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSourceControlDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Source Control"
        ],
        "operationId": "updateSourceControl",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSourceControlDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSourceControlDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Source Control"
        ],
        "operationId": "addSourceControl",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSourceControlDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSourceControlDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Source Control"
        ],
        "operationId": "deleteSourceControl",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/spdx/{applicationId}/reports/{scanId}": {
      "get": {
        "tags": [
          "Spdx"
        ],
        "operationId": "getByScanId",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "json"
            }
          },
          {
            "name": "generateCycloneDx",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "spdxVersion",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "2.3"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {},
              "application/json": {},
              "application/octet-stream": {}
            }
          }
        }
      }
    },
    "/api/v2/spdx/{applicationId}/stages/{stageId}": {
      "get": {
        "tags": [
          "Spdx"
        ],
        "operationId": "getLatestForStage",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "json"
            }
          },
          {
            "name": "generateCycloneDx",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "spdxVersion",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "2.3"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {},
              "application/json": {},
              "application/octet-stream": {}
            }
          }
        }
      }
    },
    "/api/v2/reports/waivers/stale": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getStaleWaivers",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiStaleWaiversResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/scan/applications/ideUser/overview": {
      "get": {
        "tags": [
          "Scan"
        ],
        "operationId": "getIdeUsersOverview",
        "parameters": [
          {
            "name": "sinceUtcTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeUsersOverviewDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/scan/applications/{applicationId}/status/{scanRequestId}": {
      "get": {
        "tags": [
          "Scan"
        ],
        "operationId": "getScanStatus",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiThirdPartyScanResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/scan/applications/{applicationId}/sources/{source}": {
      "post": {
        "tags": [
          "Scan"
        ],
        "operationId": "scanComponents",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stageId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "build"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v2/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "realm",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Internal"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserListDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "get_1",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realm",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Internal"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realm",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Internal"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/userTokens/currentUser": {
      "post": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "createUserToken",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserTokenDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "deleteCurrentUserToken",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/userTokens/userCode/{userCode}": {
      "delete": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "deleteUserTokenByUserCode",
        "parameters": [
          {
            "name": "userCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/userTokens/{username}": {
      "get": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "getUserTokenByUsernameAndRealmId",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realm",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Internal"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserTokenDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/userTokens/currentUser/hasToken": {
      "get": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "getUserTokenExistsForCurrentUser",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserTokenExistsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/userTokens": {
      "get": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "getUserTokensByCreatedBetweenAndRealmId",
        "parameters": [
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realm",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Internal"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserTokenDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/userTokens/purge": {
      "delete": {
        "tags": [
          "User Tokens"
        ],
        "operationId": "purgeUserTokens",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/vulnerabilities/{refId}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "operationId": "getSecurityVulnerabilityDetails",
        "parameters": [
          {
            "name": "refId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "componentIdentifier",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComponentIdentifier"
            }
          },
          {
            "name": "identificationSource",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityVulnerabilityData"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}": {
      "get": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "getOwnerArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inherit",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOwnerArtifactoryConnectionDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "updateOwnerArtifactoryConnectionStatus",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiArtifactoryConnectionStatusRequestDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "addArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}": {
      "get": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "getArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactoryConnectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "updateArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactoryConnectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "deleteArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactoryConnectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {}
            }
          }
        }
      }
    },
    "/api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/test": {
      "post": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "testArtifactoryConnection",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiStatusDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}/test": {
      "post": {
        "tags": [
          "Config Artifactory Connection"
        ],
        "operationId": "testArtifactoryConnection_1",
        "parameters": [
          {
            "name": "ownerType",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "application|organization",
              "type": "string",
              "enum": [
                "application",
                "organization",
                "repository_container",
                "repository_manager",
                "repository",
                "global"
              ]
            }
          },
          {
            "name": "internalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactoryConnectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiStatusDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiComponentIdentifierDTOV2": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "GroupingByDTO": {
        "type": "object",
        "properties": {
          "groupIdentifier": {
            "type": "string",
            "enum": [
              "itemType",
              "organizationId",
              "organizationName",
              "applicationId",
              "applicationName",
              "applicationPublicId",
              "policyEvaluationStage",
              "applicationVersion",
              "reportId",
              "componentHash",
              "componentFormat",
              "componentName",
              "componentCoordinate",
              "vulnerabilityId",
              "vulnerabilitySeverity",
              "vulnerabilityStatus",
              "vulnerabilityDescription",
              "applicationCategoryId",
              "applicationCategoryName",
              "applicationCategoryColor",
              "applicationCategoryDescription",
              "componentLabelId",
              "componentLabelName",
              "componentLabelColor",
              "componentLabelDescription",
              "policyId",
              "policyName",
              "policyThreatCategory",
              "policyThreatLevel",
              "parentOrganizationName",
              "parentOrganizationId",
              "sbomSpecification"
            ]
          },
          "groupBy": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "searchResultItemDTOS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultItemDTO"
            }
          }
        }
      },
      "SearchResultDTO": {
        "type": "object",
        "properties": {
          "searchQuery": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalNumberOfHits": {
            "type": "integer",
            "format": "int32"
          },
          "isExactTotalNumberOfHits": {
            "type": "boolean"
          },
          "groupingByDTOS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupingByDTO"
            }
          }
        }
      },
      "SearchResultItemDTO": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "applicationPublicId": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "applicationVersion": {
            "type": "string"
          },
          "sbomSpecification": {
            "type": "string"
          },
          "policyEvaluationStage": {
            "type": "string"
          },
          "reportId": {
            "type": "string"
          },
          "componentHash": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "componentName": {
            "type": "string"
          },
          "vulnerabilityId": {
            "type": "string"
          },
          "vulnerabilityDescription": {
            "type": "string"
          },
          "vulnerabilityStatus": {
            "type": "string"
          },
          "applicationCategoryId": {
            "type": "string"
          },
          "applicationCategoryName": {
            "type": "string"
          },
          "applicationCategoryColor": {
            "type": "string"
          },
          "applicationCategoryDescription": {
            "type": "string"
          },
          "componentLabelId": {
            "type": "string"
          },
          "componentLabelName": {
            "type": "string"
          },
          "componentLabelColor": {
            "type": "string"
          },
          "componentLabelDescription": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyThreatCategory": {
            "type": "string"
          },
          "policyThreatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "resultIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiApplicationCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "ApplicableTagsDTO": {
        "type": "object",
        "properties": {
          "applicationCategoriesByOwner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagsByOwnerDTO"
            }
          }
        }
      },
      "TagsByOwnerDTO": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "application",
              "organization",
              "repository_container",
              "repository_manager",
              "repository",
              "global"
            ]
          },
          "applicationCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiApplicationCategoryDTO"
            }
          }
        }
      },
      "PolicyTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "tagId": {
            "type": "string"
          }
        }
      },
      "ApplicationTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "tagId": {
            "type": "string"
          }
        }
      },
      "ApplicationTagsByOwnerDTO": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "application",
              "organization",
              "repository_container",
              "repository_manager",
              "repository",
              "global"
            ]
          },
          "applicationTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTag"
            }
          }
        }
      },
      "AppliedTagsDTO": {
        "type": "object",
        "properties": {
          "applicationTagsByOwner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTagsByOwnerDTO"
            }
          }
        }
      },
      "ApiApplicationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publicId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "contactUserName": {
            "type": "string"
          },
          "applicationTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiApplicationTagDTO"
            }
          }
        }
      },
      "ApiApplicationTagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tagId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          }
        }
      },
      "ApiApplicationListDTO": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiApplicationDTO"
            }
          }
        }
      },
      "ApiMoveApplicationResponseDTOV2": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiComponentDTOV2": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "displayName": {
            "type": "string"
          },
          "proprietary": {
            "type": "boolean"
          },
          "thirdParty": {
            "type": "boolean"
          }
        }
      },
      "ApiComponentDetailsDTOV2": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/ApiComponentDTOV2"
          },
          "matchState": {
            "type": "string"
          },
          "catalogDate": {
            "type": "string",
            "format": "date-time"
          },
          "relativePopularity": {
            "type": "integer",
            "format": "int32"
          },
          "licenseData": {
            "$ref": "#/components/schemas/ApiLicenseDataDTO"
          },
          "integrityRating": {
            "type": "string"
          },
          "hygieneRating": {
            "type": "string"
          },
          "securityData": {
            "$ref": "#/components/schemas/ApiSecurityDataDTO"
          },
          "policyData": {
            "$ref": "#/components/schemas/ApiComponentPolicyViolationListDTOV2"
          },
          "projectData": {
            "$ref": "#/components/schemas/ApiComponentProjectDataDTO"
          }
        }
      },
      "ApiComponentDetailsResultDTOV2": {
        "type": "object",
        "properties": {
          "componentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentDetailsDTOV2"
            }
          }
        }
      },
      "ApiComponentPolicyViolationListDTOV2": {
        "type": "object",
        "properties": {
          "policyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationDTOV2"
            }
          }
        }
      },
      "ApiComponentProjectDataDTO": {
        "type": "object",
        "properties": {
          "firstReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "projectMetadata": {
            "$ref": "#/components/schemas/ApiComponentProjectMetadataDTO"
          },
          "sourceControlManagement": {
            "$ref": "#/components/schemas/ApiComponentProjectScmDTO"
          }
        }
      },
      "ApiComponentProjectMetadataDTO": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          }
        }
      },
      "ApiComponentProjectScmDTO": {
        "type": "object",
        "properties": {
          "scmUrl": {
            "type": "string"
          },
          "scmMetadata": {
            "$ref": "#/components/schemas/ApiComponentProjectScmMetadataDTO"
          },
          "scmDetails": {
            "$ref": "#/components/schemas/ApiComponentProjectScmDetailsDTO"
          }
        }
      },
      "ApiComponentProjectScmDetailsDTO": {
        "type": "object",
        "properties": {
          "commitsPerMonth": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueDevsPerMonth": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiComponentProjectScmMetadataDTO": {
        "type": "object",
        "properties": {
          "stars": {
            "type": "integer",
            "format": "int32"
          },
          "forks": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiConstraintViolationDTO": {
        "type": "object",
        "properties": {
          "constraintId": {
            "type": "string"
          },
          "constraintName": {
            "type": "string"
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationReasonDTO"
            }
          }
        }
      },
      "ApiConstraintViolationReasonDTO": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "reference": {
            "$ref": "#/components/schemas/TriggerReference"
          }
        }
      },
      "ApiLicenseDTO": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string"
          },
          "licenseName": {
            "type": "string"
          }
        }
      },
      "ApiLicenseDataDTO": {
        "type": "object",
        "properties": {
          "declaredLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "observedLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "effectiveLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "overriddenLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ApiPolicyViolationDTOV2": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationDTO"
            }
          }
        }
      },
      "ApiSecurityDataDTO": {
        "type": "object",
        "properties": {
          "securityIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSecurityIssueDTO"
            }
          }
        }
      },
      "ApiSecurityIssueAnalysisDTO": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "justification": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        }
      },
      "ApiSecurityIssueDTO": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "severity": {
            "type": "number",
            "format": "float"
          },
          "status": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "threatCategory": {
            "type": "string"
          },
          "cwe": {
            "type": "string"
          },
          "cvssVector": {
            "type": "string"
          },
          "cvssVectorSource": {
            "type": "string"
          },
          "analysis": {
            "$ref": "#/components/schemas/ApiSecurityIssueAnalysisDTO"
          }
        }
      },
      "TriggerReference": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SECURITY_VULNERABILITY_REFID"
            ]
          }
        }
      },
      "ApiComponentDetailsRequestDTOV2": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentDTOV2"
            }
          }
        }
      },
      "ApiComponentReleasedFromQuarantineDTO": {
        "type": "object",
        "properties": {
          "componentReleasedFromQuarantine": {
            "$ref": "#/components/schemas/ApiRepositoryComponentPolicyViolationDTO"
          }
        }
      },
      "ApiPolicyWaiverDTO": {
        "type": "object",
        "properties": {
          "policyWaiverId": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiryTime": {
            "type": "string",
            "format": "date-time"
          },
          "isObsolete": {
            "type": "boolean"
          },
          "scopeOwnerType": {
            "type": "string"
          },
          "scopeOwnerId": {
            "type": "string"
          },
          "scopeOwnerName": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "vulnerabilityId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "constraintFacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintFact"
            }
          },
          "constraintFactsJson": {
            "type": "string"
          },
          "componentName": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "creatorName": {
            "type": "string"
          },
          "matcherStrategy": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "EXACT_COMPONENT",
              "ALL_COMPONENTS",
              "ALL_VERSIONS"
            ]
          },
          "associatedPackageUrl": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "componentUpgradeAvailable": {
            "type": "boolean"
          },
          "displayName": {
            "$ref": "#/components/schemas/ComponentDisplayName"
          }
        }
      },
      "ApiRepositoryComponentDTO": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "displayName": {
            "type": "string"
          },
          "thirdParty": {
            "type": "boolean"
          },
          "quarantineId": {
            "type": "string"
          },
          "quarantineTime": {
            "type": "string",
            "format": "date-time"
          },
          "quarantineReleaseTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiRepositoryComponentPolicyViolationDTO": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/ApiRepositoryComponentDTO"
          },
          "waivedPolicyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWaivedPolicyViolationDTO"
            }
          },
          "policyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationDTOV2"
            }
          }
        }
      },
      "ApiWaivedPolicyViolationDTO": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationDTO"
            }
          },
          "policyWaiver": {
            "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
          }
        }
      },
      "ComponentDisplayName": {
        "type": "object",
        "properties": {
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentDisplayNamePart"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ComponentDisplayNamePart": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ConditionFact": {
        "type": "object",
        "properties": {
          "conditionTypeId": {
            "type": "string"
          },
          "conditionIndex": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "reference": {
            "$ref": "#/components/schemas/TriggerReference"
          },
          "triggerJson": {
            "type": "string"
          }
        }
      },
      "ConstraintFact": {
        "type": "object",
        "properties": {
          "constraintId": {
            "type": "string"
          },
          "constraintName": {
            "type": "string"
          },
          "operatorName": {
            "type": "string"
          },
          "conditionFacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionFact"
            }
          }
        }
      },
      "ApiComponentChangeActionDTO": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/ApiComponentDTOV2"
          }
        }
      },
      "ApiComponentRemediationDTO": {
        "type": "object",
        "properties": {
          "remediation": {
            "$ref": "#/components/schemas/ApiComponentRemediationValueDTO"
          }
        }
      },
      "ApiComponentRemediationValueDTO": {
        "type": "object",
        "properties": {
          "versionChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiVersionChangeOptionDTO"
            }
          }
        }
      },
      "ApiVersionChangeOptionDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "next-no-violations",
              "next-non-failing",
              "next-no-violations-with-dependencies",
              "next-non-failing-with-dependencies"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/ApiComponentChangeActionDTO"
          }
        }
      },
      "ApiComponentOrPurlIdentifierDTOV2": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "packageUrl": {
            "type": "string"
          }
        }
      },
      "ApiComponentsInQuarantineDTO": {
        "type": "object",
        "properties": {
          "componentsInQuarantine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryComponentsInQuarantineDTO"
            }
          }
        }
      },
      "ApiRepositoryComponentsInQuarantineDTO": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/ApiRepositoryDTO"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryComponentPolicyViolationDTO"
            }
          }
        }
      },
      "ApiRepositoryDTO": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "type": "string"
          },
          "publicId": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "auditEnabled": {
            "type": "boolean"
          },
          "quarantineEnabled": {
            "type": "boolean"
          },
          "policyCompliantComponentSelectionEnabled": {
            "type": "boolean"
          },
          "namespaceConfusionProtectionEnabled": {
            "type": "boolean"
          }
        }
      },
      "ApiApplicationBaseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publicId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "contactUserName": {
            "type": "string"
          }
        }
      },
      "ApiApplicationWaiverDTO": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApiApplicationBaseDTO"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationStageDTO"
            }
          }
        }
      },
      "ApiComponentPolicyViolationDTO": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/ApiComponentDTOV2"
          },
          "waivedPolicyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWaivedPolicyViolationDTO"
            }
          }
        }
      },
      "ApiComponentWaiversDTO": {
        "type": "object",
        "properties": {
          "applicationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiApplicationWaiverDTO"
            }
          },
          "repositoryWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryWaiverDTO"
            }
          }
        }
      },
      "ApiPolicyViolationStageDTO": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "string"
          },
          "componentPolicyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentPolicyViolationDTO"
            }
          }
        }
      },
      "ApiRepositoryWaiverDTO": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/ApiRepositoryDTO"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationStageDTO"
            }
          }
        }
      },
      "ConfigurationValidationResult": {
        "type": "object",
        "properties": {
          "configurationComplete": {
            "$ref": "#/components/schemas/ValidationResult"
          },
          "repoPrivate": {
            "$ref": "#/components/schemas/ValidationResult"
          },
          "tokenPermissions": {
            "$ref": "#/components/schemas/ValidationResult"
          },
          "sshConfiguration": {
            "$ref": "#/components/schemas/ValidationResult"
          }
        }
      },
      "ValidationResult": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ApiCompositeSourceControlDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "repositoryUrl": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOString"
          },
          "username": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOString"
          },
          "token": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOString"
          },
          "baseBranch": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOString"
          },
          "remediationPullRequestsEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          },
          "statusChecksEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          },
          "pullRequestCommentingEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          },
          "sourceControlEvaluationsEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          },
          "sourceControlScanTarget": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOString"
          },
          "sshEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          },
          "commitStatusEnabled": {
            "$ref": "#/components/schemas/ApiCompositeValueDTOBoolean"
          }
        }
      },
      "ApiCompositeValueDTOBoolean": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "parentValue": {
            "type": "boolean"
          },
          "parentName": {
            "type": "string"
          }
        }
      },
      "ApiCompositeValueDTOString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "parentValue": {
            "type": "string"
          },
          "parentName": {
            "type": "string"
          }
        }
      },
      "ApiCrowdConfigurationDTO": {
        "type": "object",
        "properties": {
          "serverUrl": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "applicationPassword": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiStatusDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ApiDataRetentionPoliciesDTO": {
        "type": "object",
        "properties": {
          "applicationReports": {
            "$ref": "#/components/schemas/ApiReportRetentionPoliciesDTO"
          },
          "successMetrics": {
            "$ref": "#/components/schemas/ApiSuccessMetricsRetentionPolicyDTO"
          }
        }
      },
      "ApiReportRetentionPoliciesDTO": {
        "type": "object",
        "properties": {
          "stages": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApiReportRetentionPolicyDTO"
            }
          }
        }
      },
      "ApiReportRetentionPolicyDTO": {
        "type": "object",
        "properties": {
          "inheritPolicy": {
            "type": "boolean"
          },
          "enablePurging": {
            "type": "boolean"
          },
          "maxCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxAge": {
            "type": "string"
          }
        }
      },
      "ApiSuccessMetricsRetentionPolicyDTO": {
        "type": "object",
        "properties": {
          "inheritPolicy": {
            "type": "boolean"
          },
          "enablePurging": {
            "type": "boolean"
          },
          "maxAge": {
            "type": "string"
          }
        }
      },
      "ApiComponentEvaluationTicketDTOV2": {
        "type": "object",
        "properties": {
          "resultId": {
            "type": "string"
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time"
          },
          "applicationId": {
            "type": "string"
          },
          "resultsUrl": {
            "type": "string"
          }
        }
      },
      "ApiComponentEvaluationRequestDTOV2": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentDTOV2"
            }
          }
        }
      },
      "ApiApplicationEvaluationStatusDTOV2": {
        "type": "object",
        "properties": {
          "statusUrl": {
            "type": "string"
          }
        }
      },
      "ApiSourceControlEvaluationRequestDTO": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "scanTargets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiApplicationEvaluationResultDTOV2": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "reportHtmlUrl": {
            "type": "string"
          },
          "embeddableReportHtmlUrl": {
            "type": "string"
          },
          "reportPdfUrl": {
            "type": "string"
          },
          "reportDataUrl": {
            "type": "string"
          }
        }
      },
      "ApiComponentEvaluationResultDTOV2": {
        "type": "object",
        "properties": {
          "submittedDate": {
            "type": "string",
            "format": "date-time"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "applicationId": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentDetailsDTOV2"
            }
          },
          "isError": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "ApiPromoteScanRequestDTOV2": {
        "type": "object",
        "properties": {
          "scanId": {
            "type": "string"
          },
          "sourceStageId": {
            "type": "string"
          },
          "targetStageId": {
            "type": "string"
          }
        }
      },
      "ApiFirewallMetricsResultDTO": {
        "type": "object",
        "properties": {
          "firewallMetricsValue": {
            "type": "integer",
            "format": "int32"
          },
          "latestUpdatedTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiRepositoryManagerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productVersion": {
            "type": "string"
          }
        }
      },
      "ApiRepositoryListDTO": {
        "type": "object",
        "properties": {
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryDTO"
            }
          }
        }
      },
      "ApiRepositoryComponentEvaluationRequest": {
        "type": "object",
        "properties": {
          "pathname": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "packageUrl": {
            "type": "string"
          }
        }
      },
      "ApiRepositoryComponentEvaluationResult": {
        "type": "object",
        "properties": {
          "quarantined": {
            "type": "boolean"
          },
          "quarantineDate": {
            "type": "string",
            "format": "date-time"
          },
          "component": {
            "$ref": "#/components/schemas/ApiRepositoryComponentEvaluationRequest"
          },
          "catalogDate": {
            "type": "string",
            "format": "date-time"
          },
          "policyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationDTOV2"
            }
          }
        }
      },
      "ApiRepositoryComponentEvaluationResultList": {
        "type": "object",
        "properties": {
          "repositoryManagerId": {
            "type": "string"
          },
          "repositoryId": {
            "type": "string"
          },
          "repositoryPublicId": {
            "type": "string"
          },
          "repositoryType": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryComponentEvaluationResult"
            }
          }
        }
      },
      "ApiRepositoryComponentEvaluationRequestList": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryComponentEvaluationRequest"
            }
          }
        }
      },
      "ApiFirewallReleaseQuarantineConfigDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "autoReleaseQuarantineEnabled": {
            "type": "boolean"
          }
        }
      },
      "ApiFirewallReleaseQuarantineSummaryDTO": {
        "type": "object",
        "properties": {
          "autoReleaseQuarantineCountMTD": {
            "type": "integer",
            "format": "int64"
          },
          "autoReleaseQuarantineCountYTD": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiFirewallQuarantineSummaryDTO": {
        "type": "object",
        "properties": {
          "repositoryCount": {
            "type": "integer",
            "format": "int64"
          },
          "quarantineEnabledRepositoryCount": {
            "type": "integer",
            "format": "int64"
          },
          "quarantineEnabled": {
            "type": "boolean"
          },
          "totalComponentCount": {
            "type": "integer",
            "format": "int64"
          },
          "quarantinedComponentCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiRepositoryContainerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ApiRepositoryManagerListDTO": {
        "type": "object",
        "properties": {
          "repositoryManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryManagerDTO"
            }
          }
        }
      },
      "ApiHashComponentIdentifierDTO": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          }
        }
      },
      "ApiHashComponentIdentifiersDTO": {
        "type": "object",
        "properties": {
          "componentClaims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiHashComponentIdentifierDTO"
            }
          }
        }
      },
      "ApiJiraConfigurationDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "ApiLabelDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          }
        }
      },
      "ApplicableContext": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "application",
              "organization",
              "repository_container",
              "repository_manager",
              "repository",
              "global"
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicableContext"
            }
          }
        }
      },
      "ApplicableLabels": {
        "type": "object",
        "properties": {
          "labelsByOwner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelsByOwner"
            }
          }
        }
      },
      "LabelsByOwner": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "application",
              "organization",
              "repository_container",
              "repository_manager",
              "repository",
              "global"
            ]
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLabelDTO"
            }
          }
        }
      },
      "AttributionReportTemplateDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "documentTitle": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "includeTableOfContents": {
            "type": "boolean"
          },
          "includeAppendix": {
            "type": "boolean"
          },
          "includeStandardLicenseTexts": {
            "type": "boolean"
          },
          "includeSonatypeSpecialLicenses": {
            "type": "boolean"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "includeInnerSource": {
            "type": "boolean"
          }
        }
      },
      "ApiLicenseLegalApplicationReportDTO": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalComponentDTO"
            }
          },
          "licenseLegalMetadata": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalMetadataDTO"
            }
          }
        }
      },
      "ApiLicenseLegalComponentDTO": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "displayName": {
            "type": "string"
          },
          "licenseLegalData": {
            "$ref": "#/components/schemas/ApiLicenseLegalDataDTO"
          },
          "stageScans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalStageScanDTO"
            }
          }
        }
      },
      "ApiLicenseLegalCopyrightDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "originalContentHash": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          }
        }
      },
      "ApiLicenseLegalDataDTO": {
        "type": "object",
        "properties": {
          "declaredLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "observedLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "effectiveLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "highestEffectiveLicenseThreatGroup": {
            "$ref": "#/components/schemas/ApiLicenseThreatDTOV2"
          },
          "copyrights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalCopyrightDTO"
            }
          },
          "licenseFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalFileDTO"
            }
          },
          "noticeFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalFileDTO"
            }
          },
          "obligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalObligationDTO"
            }
          },
          "attributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentObligationAttributionDTO"
            }
          },
          "sourceLinks": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalSourceLinkDTO"
            }
          },
          "effectiveLicenseStatus": {
            "type": "string"
          },
          "componentCopyrightId": {
            "type": "string"
          },
          "componentCopyrightScopeOwnerId": {
            "type": "string"
          },
          "componentCopyrightLastUpdatedByUsername": {
            "type": "string"
          },
          "componentCopyrightLastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "componentLicensesId": {
            "type": "string"
          },
          "componentLicensesScopeOwnerId": {
            "type": "string"
          },
          "componentLicensesLastUpdatedByUsername": {
            "type": "string"
          },
          "componentLicensesLastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "componentNoticesId": {
            "type": "string"
          },
          "componentNoticesScopeOwnerId": {
            "type": "string"
          },
          "componentNoticesLastUpdatedByUsername": {
            "type": "string"
          },
          "componentNoticesLastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiLicenseLegalFileDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "relPath": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "originalContentHash": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          }
        }
      },
      "ApiLicenseLegalMetadataDTO": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string"
          },
          "licenseName": {
            "type": "string"
          },
          "licenseText": {
            "type": "string"
          },
          "obligations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenseObligationDTO"
            }
          },
          "threatGroup": {
            "$ref": "#/components/schemas/LicenseThreatGroupDTO"
          },
          "isMulti": {
            "type": "boolean"
          },
          "singleLicenseIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiLicenseLegalObligationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "IGNORED",
              "FLAGGED",
              "FULFILLED"
            ]
          },
          "comment": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedByUsername": {
            "type": "string"
          }
        }
      },
      "ApiLicenseLegalStageScanDTO": {
        "type": "object",
        "properties": {
          "stageName": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "scanDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiLicenseThreatDTOV2": {
        "type": "object",
        "properties": {
          "licenseThreatGroupName": {
            "type": "string"
          },
          "licenseThreatGroupLevel": {
            "type": "integer",
            "format": "int32"
          },
          "licenseThreatGroupCategory": {
            "type": "string"
          }
        }
      },
      "ComponentObligationAttributionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "obligationName": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedByUsername": {
            "type": "string"
          }
        }
      },
      "LegalSourceLinkDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "originalContent": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          }
        }
      },
      "LicenseObligationDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "obligationTexts": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LicenseThreatGroupDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiLicenseLegalComponentReportDTO": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/ApiLicenseLegalComponentDTO"
          },
          "licenseLegalMetadata": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseLegalMetadataDTO"
            }
          }
        }
      },
      "ComponentIdentifier": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BodyPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fileName": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FormDataBodyPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "simple": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "formDataContentDisposition": {
            "$ref": "#/components/schemas/FormDataContentDisposition"
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "FormDataContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fileName": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FormDataMultiPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "bodyParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FormDataBodyPart"
              }
            }
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "MessageBodyWorkers": {
        "type": "object"
      },
      "MultiPart": {
        "type": "object",
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "mediaType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "wildcardType": {
                "type": "boolean"
              },
              "wildcardSubtype": {
                "type": "boolean"
              }
            }
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "bodyParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "parameterizedHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ParameterizedHeader": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ApiMailConfigurationDTO": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "passwordIsIncluded": {
            "type": "boolean"
          },
          "sslEnabled": {
            "type": "boolean"
          },
          "startTlsEnabled": {
            "type": "boolean"
          },
          "systemEmail": {
            "type": "string"
          }
        }
      },
      "ApiMetricsReportingQueryDTOV2": {
        "type": "object",
        "properties": {
          "timePeriod": {
            "type": "string",
            "enum": [
              "WEEK",
              "MONTH"
            ]
          },
          "firstTimePeriod": {
            "type": "string"
          },
          "lastTimePeriod": {
            "type": "string"
          },
          "applicationIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizationIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiOrganizationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parentOrganizationId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTagDTO"
            }
          }
        }
      },
      "ApiTagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "enum": [
              "white",
              "grey",
              "black",
              "green",
              "yellow",
              "orange",
              "red",
              "blue",
              "light-red",
              "light-green",
              "light-blue",
              "light-purple",
              "dark-red",
              "dark-green",
              "dark-blue",
              "dark-purple"
            ]
          }
        }
      },
      "ApiOrganizationListDTO": {
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiOrganizationDTO"
            }
          }
        }
      },
      "ApiPolicyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "ORGANIZATION"
            ]
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "policyType": {
            "type": "string"
          }
        }
      },
      "ApiPolicyListDTO": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyDTO"
            }
          }
        }
      },
      "ApiPolicyWaiversApplicableToViolationDTO": {
        "type": "object",
        "properties": {
          "activeWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
            }
          },
          "expiredWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
            }
          }
        }
      },
      "ApiCrossStageViolationDTOV2": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationDTO"
            }
          },
          "applicationPublicId": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "openTime": {
            "type": "string",
            "format": "date-time"
          },
          "fixTime": {
            "type": "string",
            "format": "date-time"
          },
          "hash": {
            "type": "string"
          },
          "policyThreatCategory": {
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/ComponentDisplayName"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "filename": {
            "type": "string"
          },
          "stageData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/StageData"
            }
          },
          "policyOwner": {
            "$ref": "#/components/schemas/PolicyOwner"
          }
        }
      },
      "PolicyOwner": {
        "type": "object",
        "properties": {
          "ownerPublicId": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          }
        }
      },
      "StageData": {
        "type": "object",
        "properties": {
          "mostRecentEvaluationTime": {
            "type": "string",
            "format": "date-time"
          },
          "mostRecentScanId": {
            "type": "string"
          },
          "actionTypeId": {
            "type": "string"
          }
        }
      },
      "ApiApplicationViolationDTOV2": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApiApplicationBaseDTO"
          },
          "policyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiEnhancedPolicyViolationDTOV2"
            }
          }
        }
      },
      "ApiApplicationViolationListDTOV2": {
        "type": "object",
        "properties": {
          "applicationViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiApplicationViolationDTOV2"
            }
          }
        }
      },
      "ApiEnhancedPolicyViolationDTOV2": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationDTO"
            }
          },
          "stageId": {
            "type": "string"
          },
          "reportId": {
            "type": "string"
          },
          "reportUrl": {
            "type": "string"
          },
          "openTime": {
            "type": "string",
            "format": "date-time"
          },
          "component": {
            "$ref": "#/components/schemas/ApiComponentDTOV2"
          }
        }
      },
      "ApiComponentTransitivePolicyViolationsDTO": {
        "type": "object",
        "properties": {
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isInnerSource": {
            "type": "boolean"
          },
          "transitivePolicyViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStagePolicyViolationComponentDTO"
            }
          }
        }
      },
      "ApiStagePolicyViolationComponentDTO": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "threatCategory": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "ApiWaiverOptionsDTO": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "applyToAllComponents": {
            "type": "boolean"
          },
          "matcherStrategy": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "EXACT_COMPONENT",
              "ALL_COMPONENTS",
              "ALL_VERSIONS"
            ]
          },
          "expiryTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiComponentPolicyWaiversDTO": {
        "type": "object",
        "properties": {
          "componentPolicyWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyWaiverDTO"
            }
          }
        }
      },
      "ApiRequestPolicyWaiverDTO": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "policyViolationLink": {
            "type": "string"
          },
          "addWaiverLink": {
            "type": "string"
          }
        }
      },
      "ApiProxyServerConfigurationDTO": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "passwordIsIncluded": {
            "type": "boolean"
          },
          "excludeHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiDependencyTreeNodeDTO": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiDependencyTreeNodeDTO"
            }
          },
          "direct": {
            "type": "boolean"
          }
        }
      },
      "ApiDependencyTreeResponseDTO": {
        "type": "object",
        "properties": {
          "dependencyTree": {
            "$ref": "#/components/schemas/ApiDependencyTreeNodeDTO"
          }
        }
      },
      "ApiApplicationEvaluationCommitDTO": {
        "type": "object",
        "properties": {
          "commitHash": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "reportUrl": {
            "type": "string"
          },
          "scanTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiPolicyViolationDiffDTO": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApiApplicationDTO"
          },
          "fromCommit": {
            "$ref": "#/components/schemas/ApiApplicationEvaluationCommitDTO"
          },
          "toCommit": {
            "$ref": "#/components/schemas/ApiApplicationEvaluationCommitDTO"
          },
          "diffTime": {
            "type": "string",
            "format": "date-time"
          },
          "addedViolations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationForDiffDTO"
            }
          },
          "sameViolations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationForDiffDTO"
            }
          },
          "removedViolations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyViolationForDiffDTO"
            }
          }
        }
      },
      "ApiPolicyViolationForDiffDTO": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyViolationId": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintViolationDTO"
            }
          },
          "component": {
            "$ref": "#/components/schemas/ApiComponentDTOV2"
          }
        }
      },
      "ApiDependencyDataDTO": {
        "type": "object",
        "properties": {
          "directDependency": {
            "type": "boolean"
          },
          "innerSource": {
            "type": "boolean"
          },
          "parentComponentPurls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "innerSourceData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InnerSourceData"
            }
          }
        }
      },
      "ApiReportComponentPolicyViolationsDTOV2": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "displayName": {
            "type": "string"
          },
          "proprietary": {
            "type": "boolean"
          },
          "thirdParty": {
            "type": "boolean"
          },
          "matchState": {
            "type": "string"
          },
          "pathnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dependencyData": {
            "$ref": "#/components/schemas/ApiDependencyDataDTO"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportPolicyViolationDTOV2"
            }
          }
        }
      },
      "ApiReportConstraintConditionDTOV2": {
        "type": "object",
        "properties": {
          "conditionSummary": {
            "type": "string"
          },
          "conditionReason": {
            "type": "string"
          }
        }
      },
      "ApiReportConstraintViolationDTOV2": {
        "type": "object",
        "properties": {
          "constraintId": {
            "type": "string"
          },
          "constraintName": {
            "type": "string"
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportConstraintConditionDTOV2"
            }
          }
        }
      },
      "ApiReportPolicyDataDTOV2": {
        "type": "object",
        "properties": {
          "reportTime": {
            "type": "string",
            "format": "date-time"
          },
          "reportTitle": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "application": {
            "$ref": "#/components/schemas/ApiApplicationBaseDTO"
          },
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportComponentPolicyViolationsDTOV2"
            }
          }
        }
      },
      "ApiReportPolicyViolationDTOV2": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "policyThreatCategory": {
            "type": "string"
          },
          "policyThreatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "policyViolationId": {
            "type": "string"
          },
          "waived": {
            "type": "boolean"
          },
          "grandfathered": {
            "type": "boolean"
          },
          "legacyViolation": {
            "type": "boolean"
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportConstraintViolationDTOV2"
            }
          }
        }
      },
      "InnerSourceData": {
        "type": "object",
        "properties": {
          "ownerApplicationName": {
            "type": "string"
          },
          "ownerApplicationId": {
            "type": "string"
          },
          "innerSourceComponentPurl": {
            "type": "string"
          }
        }
      },
      "ApiGlobalInformationDTOV2": {
        "type": "object",
        "properties": {
          "dataVersionDate": {
            "type": "string"
          }
        }
      },
      "ApiLicenseDataDTOV2": {
        "type": "object",
        "properties": {
          "declaredLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "observedLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "effectiveLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "overriddenLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseDTO"
            }
          },
          "status": {
            "type": "string"
          },
          "effectiveLicenseThreats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLicenseThreatDTOV2"
            }
          }
        }
      },
      "ApiMatchStateSummaryDTOV2": {
        "type": "object",
        "properties": {
          "totalComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "knownComponentCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiReportComponentDTOV2": {
        "type": "object",
        "properties": {
          "packageUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "displayName": {
            "type": "string"
          },
          "proprietary": {
            "type": "boolean"
          },
          "thirdParty": {
            "type": "boolean"
          },
          "matchState": {
            "type": "string"
          },
          "pathnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identificationSource": {
            "type": "string"
          },
          "licenseData": {
            "$ref": "#/components/schemas/ApiLicenseDataDTOV2"
          },
          "securityData": {
            "$ref": "#/components/schemas/ApiSecurityDataDTO"
          },
          "dependencyData": {
            "$ref": "#/components/schemas/ApiDependencyDataDTO"
          },
          "cpe": {
            "type": "string"
          },
          "swid": {
            "$ref": "#/components/schemas/Swid"
          }
        }
      },
      "ApiReportRawDataDTOV2": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportComponentDTOV2"
            }
          },
          "matchSummary": {
            "$ref": "#/components/schemas/ApiMatchStateSummaryDTOV2"
          },
          "globalInformation": {
            "$ref": "#/components/schemas/ApiGlobalInformationDTOV2"
          }
        }
      },
      "AttachmentText": {
        "type": "object",
        "properties": {
          "encoding": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Swid": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "tagVersion": {
            "type": "integer",
            "format": "int32"
          },
          "patch": {
            "type": "boolean"
          },
          "text": {
            "$ref": "#/components/schemas/AttachmentText"
          }
        }
      },
      "ApiApplicationReportDTOV2": {
        "type": "object",
        "properties": {
          "stage": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "latestReportHtmlUrl": {
            "type": "string"
          },
          "reportHtmlUrl": {
            "type": "string"
          },
          "embeddableReportHtmlUrl": {
            "type": "string"
          },
          "reportPdfUrl": {
            "type": "string"
          },
          "reportDataUrl": {
            "type": "string"
          }
        }
      },
      "Action": {
        "type": "object",
        "properties": {
          "actionTypeId": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "targetType": {
            "type": "string"
          }
        }
      },
      "ApiReportHistoryDTO": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiReportResultsDTO"
            }
          }
        }
      },
      "ApiReportResultsDTO": {
        "type": "object",
        "properties": {
          "stage": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "latestReportHtmlUrl": {
            "type": "string"
          },
          "reportHtmlUrl": {
            "type": "string"
          },
          "embeddableReportHtmlUrl": {
            "type": "string"
          },
          "reportPdfUrl": {
            "type": "string"
          },
          "reportDataUrl": {
            "type": "string"
          },
          "policyEvaluationId": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "isReevaluation": {
            "type": "boolean"
          },
          "isForMonitoring": {
            "type": "boolean"
          },
          "commitHash": {
            "type": "string"
          },
          "scanTriggerType": {
            "type": "string"
          },
          "policyEvaluationResult": {
            "$ref": "#/components/schemas/PolicyEvaluationResult"
          }
        }
      },
      "ComponentFact": {
        "type": "object",
        "properties": {
          "componentIdentifier": {
            "$ref": "#/components/schemas/ComponentIdentifier"
          },
          "hash": {
            "type": "string"
          },
          "constraintFacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintFact"
            }
          },
          "pathnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "$ref": "#/components/schemas/ComponentDisplayName"
          }
        }
      },
      "PolicyAlert": {
        "type": "object",
        "properties": {
          "trigger": {
            "$ref": "#/components/schemas/PolicyFact"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          }
        }
      },
      "PolicyEvaluationResult": {
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyAlert"
            }
          },
          "affectedComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "criticalComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "severeComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "moderateComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "criticalPolicyViolationCount": {
            "type": "integer",
            "format": "int32"
          },
          "severePolicyViolationCount": {
            "type": "integer",
            "format": "int32"
          },
          "moderatePolicyViolationCount": {
            "type": "integer",
            "format": "int32"
          },
          "legacyViolationCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalComponentCount": {
            "type": "integer",
            "format": "int32"
          },
          "grandfatheredPolicyViolationCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PolicyFact": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "policyViolationId": {
            "type": "string"
          },
          "componentFacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentFact"
            }
          }
        }
      },
      "ApiRepositoryComponentPath": {
        "type": "object",
        "properties": {
          "pathname": {
            "type": "string"
          },
          "quarantine": {
            "type": "boolean"
          }
        }
      },
      "ApiRepositoryPathResponseDTO": {
        "type": "object",
        "properties": {
          "pathVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryPathVersions"
            }
          }
        }
      },
      "ApiRepositoryPathVersions": {
        "type": "object",
        "properties": {
          "requestIndex": {
            "type": "integer",
            "format": "int32"
          },
          "repositoryComponentPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRepositoryComponentPath"
            }
          }
        }
      },
      "ApiReverseProxyAuthenticationConfigurationDTO": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "usernameHeader": {
            "type": "string"
          },
          "csrfProtectionDisabled": {
            "type": "boolean"
          },
          "logoutUrl": {
            "type": "string"
          }
        }
      },
      "ApiMemberDTO": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "USER",
              "GROUP"
            ]
          },
          "userOrGroupName": {
            "type": "string"
          }
        }
      },
      "ApiRoleMemberMappingDTO": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMemberDTO"
            }
          }
        }
      },
      "ApiRoleMemberMappingListDTO": {
        "type": "object",
        "properties": {
          "memberMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRoleMemberMappingDTO"
            }
          }
        }
      },
      "ApiRoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ApiRoleListDTO": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiRoleDTO"
            }
          }
        }
      },
      "ApiSamlConfigurationResponseDTO": {
        "type": "object",
        "properties": {
          "identityProviderName": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "firstNameAttributeName": {
            "type": "string"
          },
          "lastNameAttributeName": {
            "type": "string"
          },
          "emailAttributeName": {
            "type": "string"
          },
          "usernameAttributeName": {
            "type": "string"
          },
          "groupsAttributeName": {
            "type": "string"
          },
          "validateResponseSignature": {
            "type": "boolean"
          },
          "validateAssertionSignature": {
            "type": "boolean"
          },
          "identityProviderMetadataXml": {
            "type": "string"
          }
        }
      },
      "ApiSamlConfigurationDTO": {
        "type": "object",
        "properties": {
          "identityProviderName": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "firstNameAttributeName": {
            "type": "string"
          },
          "lastNameAttributeName": {
            "type": "string"
          },
          "emailAttributeName": {
            "type": "string"
          },
          "usernameAttributeName": {
            "type": "string"
          },
          "groupsAttributeName": {
            "type": "string"
          },
          "validateResponseSignature": {
            "type": "boolean"
          },
          "validateAssertionSignature": {
            "type": "boolean"
          }
        }
      },
      "ApiSbomApplicationsHistoryMetricDTO": {
        "type": "object",
        "properties": {
          "totalScannedApplications": {
            "type": "integer",
            "format": "int64"
          },
          "applicationsUpdatedLastYear": {
            "type": "integer",
            "format": "int64"
          },
          "applicationsUpdatedLastMonth": {
            "type": "integer",
            "format": "int64"
          },
          "applicationsUpdatedLastWeek": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SbomsAnalyzedMetricsDTO": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "threshold": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VulnerabilitiesThreadLevelMetricDTO": {
        "type": "object",
        "properties": {
          "low": {
            "type": "integer",
            "format": "int64"
          },
          "lowAnnotated": {
            "type": "integer",
            "format": "int64"
          },
          "lowUnannotated": {
            "type": "integer",
            "format": "int64"
          },
          "medium": {
            "type": "integer",
            "format": "int64"
          },
          "mediumAnnotated": {
            "type": "integer",
            "format": "int64"
          },
          "mediumUnannotated": {
            "type": "integer",
            "format": "int64"
          },
          "high": {
            "type": "integer",
            "format": "int64"
          },
          "highAnnotated": {
            "type": "integer",
            "format": "int64"
          },
          "highUnannotated": {
            "type": "integer",
            "format": "int64"
          },
          "critical": {
            "type": "integer",
            "format": "int64"
          },
          "criticalAnnotated": {
            "type": "integer",
            "format": "int64"
          },
          "criticalUnannotated": {
            "type": "integer",
            "format": "int64"
          },
          "totalVulnerabilities": {
            "type": "integer",
            "format": "int64"
          },
          "totalVulnerabilitiesAnnotated": {
            "type": "integer",
            "format": "int64"
          },
          "totalVulnerabilitiesUnannotated": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiSbomStatusDTO": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "isError": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "License": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string"
          },
          "licenseName": {
            "type": "string"
          }
        }
      },
      "SbomComponentDTO": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "packageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "dependencyType": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ComponentIdentifier"
          },
          "displayName": {
            "type": "string"
          },
          "licenses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/License"
            }
          },
          "vulnerabilitySeverityNoneCount": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilitySeverityLowCount": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilitySeverityMediumCount": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilitySeverityHighCount": {
            "type": "integer",
            "format": "int32"
          },
          "vulnerabilitySeverityCriticalCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentageAnnotated": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SbomComponentListDTO": {
        "type": "object",
        "properties": {
          "totalResultsCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SbomComponentDTO"
            }
          }
        }
      },
      "ThirdPartySbomMetadataSummaryDTO": {
        "type": "object",
        "properties": {
          "applicationVersion": {
            "type": "string"
          },
          "spec": {
            "type": "string"
          },
          "specVersion": {
            "type": "string"
          },
          "importDate": {
            "type": "string",
            "format": "date-time"
          },
          "none": {
            "type": "integer",
            "format": "int32"
          },
          "low": {
            "type": "integer",
            "format": "int32"
          },
          "medium": {
            "type": "integer",
            "format": "int32"
          },
          "high": {
            "type": "integer",
            "format": "int32"
          },
          "critical": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ThirdPartySbomMetadataSummaryListDTO": {
        "type": "object",
        "properties": {
          "totalResultsCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThirdPartySbomMetadataSummaryDTO"
            }
          }
        }
      },
      "vulnerabilityAnalysis": {
        "required": [
          "detail",
          "justification",
          "response",
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Vulnerability analysis state.",
            "enum": [
              "resolved",
              "resolved_with_pedigree",
              "exploitable",
              "in_triage",
              "false_positive",
              "not_affected"
            ]
          },
          "justification": {
            "type": "string",
            "description": "The rationale of why the impact analysis state was asserted",
            "enum": [
              "code_not_present",
              "code_not_reachable",
              "requires_configuration",
              "requires_dependency",
              "requires_environment",
              "protected_by_compiler",
              "protected_at_runtime",
              "protected_at_perimeter",
              "protected_by_mitigating_control"
            ]
          },
          "response": {
            "type": "string",
            "description": "Vulnerability analysis response by an author, supplier or manufacturer for the affected component.",
            "enum": [
              "can_not_fix",
              "will_not_fix",
              "update",
              "rollback",
              "workaround_available"
            ]
          },
          "detail": {
            "type": "string",
            "description": "Detailed description of the impact including methods used during assessment"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastUpdatedOn": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": "Vulnerability analysis details."
      },
      "SBOM vulnerability analysis request": {
        "required": [
          "componentLocator",
          "vulnerabilityAnalysis"
        ],
        "type": "object",
        "properties": {
          "componentLocator": {
            "$ref": "#/components/schemas/componentLocator"
          },
          "vulnerabilityAnalysis": {
            "$ref": "#/components/schemas/vulnerabilityAnalysis"
          }
        }
      },
      "componentLocator": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Component hash"
          },
          "packageUrl": {
            "type": "string",
            "description": "Component package URL"
          }
        },
        "description": "Component details about the vulnerable component. Either hash or package URL must be provided"
      },
      "ApiSearchCriteriaDTOV2": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          }
        }
      },
      "ApiSearchResultDTOV2": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "reportHtmlUrl": {
            "type": "string"
          },
          "reportUrl": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "componentIdentifier": {
            "$ref": "#/components/schemas/ApiComponentIdentifierDTOV2"
          },
          "packageUrl": {
            "type": "string"
          },
          "threatLevel": {
            "type": "integer",
            "format": "int32"
          },
          "dependencyData": {
            "$ref": "#/components/schemas/ApiDependencyDataDTO"
          }
        }
      },
      "ApiSearchResultsDTOV2": {
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/ApiSearchCriteriaDTOV2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSearchResultDTOV2"
            }
          }
        }
      },
      "ApiOwnerDTO": {
        "type": "object",
        "properties": {
          "ownerPublicId": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          }
        }
      },
      "ApiSecurityVulnerabilityOverrideDTOV2": {
        "type": "object",
        "properties": {
          "securityOverrideId": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/ApiOwnerDTO"
          },
          "currentlyAffectedComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiComponentDTOV2"
            }
          }
        }
      },
      "ApiSecurityVulnerabilityOverrideResponseDTOV2": {
        "type": "object",
        "properties": {
          "securityOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSecurityVulnerabilityOverrideDTOV2"
            }
          }
        }
      },
      "ApiSourceControlConfigurationDTO": {
        "type": "object",
        "properties": {
          "cloneDirectory": {
            "type": "string"
          },
          "gitImplementation": {
            "type": "string",
            "enum": [
              "native",
              "java"
            ]
          },
          "prCommentPurgeWindow": {
            "type": "integer",
            "format": "int32"
          },
          "prEventPurgeWindow": {
            "type": "integer",
            "format": "int32"
          },
          "gitExecutable": {
            "type": "string"
          },
          "gitTimeoutSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "commitUsername": {
            "type": "string"
          },
          "commitEmail": {
            "type": "string"
          },
          "useUsernameInRepositoryCloneUrl": {
            "type": "boolean"
          },
          "defaultBranchMonitoringStartTime": {
            "type": "string"
          },
          "defaultBranchMonitoringIntervalHours": {
            "type": "integer",
            "format": "int32"
          },
          "pullRequestMonitoringIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiPullRequestResult": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "exceptionThrown": {
            "type": "boolean"
          },
          "successful": {
            "type": "boolean"
          },
          "totalTime": {
            "type": "integer",
            "format": "int64"
          },
          "reasoning": {
            "type": "string"
          }
        }
      },
      "ApiPullRequestResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPullRequestResult"
            }
          }
        }
      },
      "ApiSourceControlDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "repositoryUrl": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "baseBranch": {
            "type": "string"
          },
          "enablePullRequests": {
            "type": "boolean"
          },
          "remediationPullRequestsEnabled": {
            "type": "boolean"
          },
          "enableStatusChecks": {
            "type": "boolean"
          },
          "statusChecksEnabled": {
            "type": "boolean"
          },
          "pullRequestCommentingEnabled": {
            "type": "boolean"
          },
          "sourceControlEvaluationsEnabled": {
            "type": "boolean"
          },
          "sourceControlScanTarget": {
            "type": "string"
          },
          "sshEnabled": {
            "type": "boolean"
          },
          "commitStatusEnabled": {
            "type": "boolean"
          }
        }
      },
      "ApiConditionFactReasonDTO": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "ApiConstraintFactDTO": {
        "type": "object",
        "properties": {
          "constraintName": {
            "type": "string"
          },
          "constraintId": {
            "type": "string"
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConditionFactReasonDTO"
            }
          }
        }
      },
      "ApiStaleApplicationEvaluationDTO": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApiApplicationBaseDTO"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStaleEvaluationStageDTO"
            }
          }
        }
      },
      "ApiStaleEvaluationStageDTO": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "string"
          },
          "lastEvaluationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiStaleEvaluationsDTO": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStaleApplicationEvaluationDTO"
            }
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStaleRepositoryEvaluationDTO"
            }
          }
        }
      },
      "ApiStaleRepositoryEvaluationDTO": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/ApiRepositoryDTO"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStaleEvaluationStageDTO"
            }
          }
        }
      },
      "ApiStaleWaiverDTO": {
        "type": "object",
        "properties": {
          "waiverId": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "policyName": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "scopeOwnerType": {
            "type": "string"
          },
          "scopeOwnerId": {
            "type": "string"
          },
          "scopeOwnerName": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiryTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "creatorName": {
            "type": "string"
          },
          "constraintFacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiConstraintFactDTO"
            }
          },
          "staleEvaluations": {
            "$ref": "#/components/schemas/ApiStaleEvaluationsDTO"
          }
        }
      },
      "ApiStaleWaiversResponseDTO": {
        "type": "object",
        "properties": {
          "staleWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiStaleWaiverDTO"
            }
          }
        }
      },
      "IdeUsersOverviewDTO": {
        "type": "object",
        "properties": {
          "userCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiEvaluationResultCounterDTO": {
        "type": "object",
        "properties": {
          "critical": {
            "type": "integer",
            "format": "int32"
          },
          "severe": {
            "type": "integer",
            "format": "int32"
          },
          "moderate": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiThirdPartyScanResultDTO": {
        "type": "object",
        "properties": {
          "policyAction": {
            "type": "string"
          },
          "reportHtmlUrl": {
            "type": "string"
          },
          "reportPdfUrl": {
            "type": "string"
          },
          "reportDataUrl": {
            "type": "string"
          },
          "embeddableReportHtmlUrl": {
            "type": "string"
          },
          "isError": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          },
          "componentsAffected": {
            "$ref": "#/components/schemas/ApiEvaluationResultCounterDTO"
          },
          "openPolicyViolations": {
            "$ref": "#/components/schemas/ApiEvaluationResultCounterDTO"
          },
          "grandfatheredPolicyViolations": {
            "type": "integer",
            "format": "int32"
          },
          "legacyViolations": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiUserDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          }
        }
      },
      "ApiUserListDTO": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiUserDTO"
            }
          }
        }
      },
      "ApiUserTokenDTO": {
        "type": "object",
        "properties": {
          "userCode": {
            "type": "string"
          },
          "passCode": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          }
        }
      },
      "ApiUserTokenExistsDTO": {
        "type": "object",
        "properties": {
          "userTokenExists": {
            "type": "boolean"
          }
        }
      },
      "CweId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "ReferenceLink": {
        "type": "object",
        "properties": {
          "referenceType": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RootCause": {
        "type": "object",
        "properties": {
          "listOfPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "versionRange": {
            "type": "string"
          }
        }
      },
      "SecurityVulnerabilityCustomData": {
        "type": "object",
        "properties": {
          "remediation": {
            "type": "string"
          },
          "cweId": {
            "type": "string"
          },
          "cvssVector": {
            "type": "string"
          },
          "cvssSeverity": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SecurityVulnerabilityData": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "vulnIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vulnerabilityLink": {
            "type": "string",
            "format": "uri"
          },
          "source": {
            "$ref": "#/components/schemas/VulnerabilitySource"
          },
          "mainSeverity": {
            "$ref": "#/components/schemas/SecurityVulnerabilitySeverity"
          },
          "severityScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityVulnerabilitySeverity"
            }
          },
          "weakness": {
            "$ref": "#/components/schemas/SecurityVulnerabilityWeakness"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "explanationMarkdown": {
            "type": "string"
          },
          "componentExplanationMarkdown": {
            "type": "string"
          },
          "detectionMarkdown": {
            "type": "string"
          },
          "componentDetectionMarkdown": {
            "type": "string"
          },
          "recommendationMarkdown": {
            "type": "string"
          },
          "componentRecommendationMarkdown": {
            "type": "string"
          },
          "rootCauses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RootCause"
            }
          },
          "advisories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceLink"
            }
          },
          "vulnerableVersionRanges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "researchType": {
            "type": "string",
            "enum": [
              "FAST_TRACK",
              "DEEP_DIVE"
            ]
          },
          "isAdvancedVulnerabilityDetection": {
            "type": "boolean"
          },
          "customData": {
            "$ref": "#/components/schemas/SecurityVulnerabilityCustomData"
          }
        }
      },
      "SecurityVulnerabilitySeverity": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "sourceLabel": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "float"
          },
          "vector": {
            "type": "string"
          }
        }
      },
      "SecurityVulnerabilityWeakness": {
        "type": "object",
        "properties": {
          "cweSource": {
            "type": "string"
          },
          "cweIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CweId"
            }
          }
        }
      },
      "VulnerabilitySource": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string"
          },
          "longName": {
            "type": "string"
          }
        }
      },
      "ApiArtifactoryConnectionDTO": {
        "type": "object",
        "properties": {
          "artifactoryConnectionId": {
            "type": "string"
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "application",
              "organization",
              "repository_container",
              "repository_manager",
              "repository",
              "global"
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "isAnonymous": {
            "type": "boolean"
          },
          "baseUrl": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiArtifactoryConnectionStatusResponseDTO": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "inheritedFromOrganizationId": {
            "type": "string"
          },
          "inheritedFromOrganizationName": {
            "type": "string"
          },
          "allowOverride": {
            "type": "boolean"
          },
          "inheritedFromOrgEnabled": {
            "type": "boolean"
          },
          "allowChange": {
            "type": "boolean"
          }
        }
      },
      "ApiOwnerArtifactoryConnectionDTO": {
        "type": "object",
        "properties": {
          "artifactoryConnection": {
            "$ref": "#/components/schemas/ApiArtifactoryConnectionDTO"
          },
          "artifactoryConnectionStatus": {
            "$ref": "#/components/schemas/ApiArtifactoryConnectionStatusResponseDTO"
          },
          "ownerDTO": {
            "$ref": "#/components/schemas/ApiOwnerDTO"
          }
        }
      },
      "ApiArtifactoryConnectionStatusRequestDTO": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "allowOverride": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
